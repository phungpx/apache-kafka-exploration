version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    restart: always
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8000:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - kafka-net

  producer:
    container_name: producer
    build:
      context: ../producer
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      KAFKA_SERVERS: kafka:9092
      KAFKA_TOPIC: my-topic
      KAFKA_TOPIC_PARTITIONS: 1
      KAFKA_REPLICATION_FACTOR: 1
    networks:
      - kafka-net

  consumer:
    container_name: consumer
    build:
      context: ../consumer
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      - kafka
      - producer
    environment:
      KAFKA_SERVERS: kafka:9092
      KAFKA_TOPIC: my-topic
      KAFKA_CONSUMER_GROUP_ID: my-consumer-group-1
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
